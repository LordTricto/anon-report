[{"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/index.js":"1","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/App.js":"2","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/store.js":"3","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/login.js":"4","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/nonverified.js":"5","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/timeline.js":"6","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/adminTimeline.js":"7","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/report.js":"8","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/reducers/reducers.js":"9","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/actions/actions.js":"10","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/utils/utils.js":"11","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/Input/input.js":"12","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/reportCard/reportCard.js":"13","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/postCard/postCard.js":"14","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/types/types.js":"15","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/dashboardLayout/index.js":"16","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/modal/ChatbotModal.js":"17","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/Interactions.js":"18","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/chart/Chart.js":"19","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/assests/ArrowDownIcon.js":"20"},{"size":887,"mtime":1641843151236,"results":"21","hashOfConfig":"22"},{"size":850,"mtime":1642537062809,"results":"23","hashOfConfig":"22"},{"size":457,"mtime":1641843151239,"results":"24","hashOfConfig":"22"},{"size":3249,"mtime":1641843151237,"results":"25","hashOfConfig":"22"},{"size":2396,"mtime":1642806259289,"results":"26","hashOfConfig":"22"},{"size":2271,"mtime":1642540360068,"results":"27","hashOfConfig":"22"},{"size":1835,"mtime":1641843151236,"results":"28","hashOfConfig":"22"},{"size":1008,"mtime":1642625836531,"results":"29","hashOfConfig":"22"},{"size":403,"mtime":1641843151239,"results":"30","hashOfConfig":"22"},{"size":204,"mtime":1641843151238,"results":"31","hashOfConfig":"22"},{"size":125,"mtime":1641843151240,"results":"32","hashOfConfig":"22"},{"size":759,"mtime":1641843151233,"results":"33","hashOfConfig":"22"},{"size":8324,"mtime":1642806793174,"results":"34","hashOfConfig":"22"},{"size":5313,"mtime":1642706544150,"results":"35","hashOfConfig":"22"},{"size":58,"mtime":1641843151239,"results":"36","hashOfConfig":"22"},{"size":3214,"mtime":1642456507422,"results":"37","hashOfConfig":"22"},{"size":4964,"mtime":1642706813746,"results":"38","hashOfConfig":"22"},{"size":6229,"mtime":1642711791613,"results":"39","hashOfConfig":"22"},{"size":2217,"mtime":1642711792005,"results":"40","hashOfConfig":"22"},{"size":482,"mtime":1642542016680,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"17yehjj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/index.js",[],["86","87"],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/App.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/store.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/login.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/nonverified.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/timeline.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/adminTimeline.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/report.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/reducers/reducers.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/actions/actions.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/utils/utils.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/Input/input.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/reportCard/reportCard.js",["88"],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/postCard/postCard.js",["89","90"],"import \"./style.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { apiInstance } from \"../../utils/utils\";\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\n\n// const FILE_SIZE = 160 * 1024;\n// const SUPPORTED_FORMATS = [\n//   \"image/jpg\",\n//   \"image/jpeg\",\n//   \"image/gif\",\n//   \"image/png\",\n//   \"video/mp4\",\n//   \"audio/mp3\",\n// ];\n\nconst PostCard = ({ nextFunc }) => {\n  const [title, setTitle] = useState([]);\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState();\n  const [location, setLocation] = useState();\n  const [happening, setHappening] = useState();\n  const [by, setBy] = useState();\n  const [id, setId] = useState(\"\");\n  // let time = new Date().toLocaleTimeString();\n  // const [displayTime, setDisplayTime] = useState(time);\n\n  // const updateTime = () => {\n  //   time = new Date().toLocaleTimeString();\n  //   setDisplayTime(time);\n  // };\n\n  // setInterval(updateTime, 1000);\n\n  // useEffect(() => {\n  //   if (id === \"\") return;\n  //   apiInstance\n  //     .post(`/posts/verify/${id}`, {\n  //       input: location,\n  //       input1: happening,\n  //       input2: by,\n  //     })\n  //     .then((resp) => {})\n  //     .catch((err) => {\n  //       console.log(err.response.data.error);\n  //     });\n  // }, [id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (id === \"\") return;\n    apiInstance\n      .post(`/feedbacks/${id}`)\n      .then((resp) => {\n        // console.log(resp.data);\n        nextFunc(resp.data.feedback.id);\n      })\n      .catch((err) => {\n        alert(err.response.data.error);\n      });\n  }, [id]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"post\", title);\n    data.append(\"media\", file);\n    data.append(\"description\", description);\n    data.append(\"location\", location);\n    data.append(\"happening\", happening);\n\n    async function uploadData() {\n      apiInstance\n        .post(`/posts`, data)\n        .then((resp) => {\n          setId(resp.data.data.id);\n        })\n        .catch((err) => {\n          alert(err.response.data.error);\n        });\n    }\n    uploadData();\n  };\n\n  return (\n    <>\n      <div className=\"post__card\">\n        <form onSubmit={onSubmit} className=\"post__form\">\n          <div className=\"post__header\">\n            <span>Report A Case</span>\n            {/* <span className=\"post__date\">{displayTime}</span> */}\n          </div>\n          <div className=\"post__details\">\n            <div className=\"post__profile\">\n              <div className=\"post__image\">A</div>\n            </div>\n            <div className=\"post__inputs\">\n              <div>\n                <span>Title</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportTitle\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setTitle(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Description</span>\n                <textarea\n                  className=\"post__textarea Bottom\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setDescription(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Loction</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setLocation(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Is it happening right now ?</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setHappening(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Did you record the video or take the picture ?</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setBy(value);\n                  }}\n                ></textarea>\n              </div>\n            </div>\n          </div>\n          <div className=\"post__bottom\">\n            <div className=\"post__button\">\n              <button type=\"submit\">Post Report</button>\n            </div>\n\n            <div className=\"post__img\">\n              <FontAwesomeIcon icon={faImage} />\n              <input\n                type=\"file\"\n                id=\"file\"\n                onChange={(event) => {\n                  const file = event.target.files[0];\n                  setFile(file);\n                }}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default PostCard;\n","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/redux/types/types.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/dashboardLayout/index.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/modal/ChatbotModal.js",[],"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/Interactions.js",["91"],"import \"../styles/interactions.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport ArrowDownIcon from \"../assests/ArrowDownIcon\";\nimport ChartCanva from \"../components/chart/Chart\";\nimport DashboardLayout from \"../components/dashboardLayout\";\nimport ReportCard from \"../components/reportCard/reportCard\";\nimport { apiInstance } from \"../utils/utils\";\nimport { useSelector } from \"react-redux\";\n\nconst Interactions = () => {\n  const token = useSelector((state) => state.token);\n\n  const [data, setData] = useState(\"\");\n  const [mostReportedData, setMostReportedData] = useState(\"\");\n  const [dataArray, setDataArray] = useState(\"\");\n  const [threatArray, setThreatArray] = useState(\"\");\n  const [mostReportedDataArray, setMostReportedDataArray] = useState(\"\");\n  const [mostReportedThreatArray, setMostReportedThreatArray] = useState(\"\");\n  const [highestComment, setHighestComment] = useState(\"\");\n  const [lowestComment, setLowestComment] = useState(\"\");\n  const [highestLikes, setHighestLikes] = useState(\"\");\n  const [lowestLikes, setLowestLikes] = useState(\"\");\n  const [type, setType] = useState(\"rape\");\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  useEffect(() => {\n    getThreatLocations(type);\n  }, [type]);\n\n  useEffect(() => {\n    getHighestAndLowestComments();\n    getMostReported();\n    getHighestAndLowestLikes();\n  }, []);\n\n  useEffect(() => {\n    if (data === \"\") return;\n    const firstArray = [];\n    const secondArray = [];\n\n    Object.keys(data).map((el) => firstArray.push(el));\n    Object.values(data).map((el) => secondArray.push(el));\n\n    setDataArray(secondArray);\n    setThreatArray(firstArray);\n  }, [data]);\n\n  useEffect(() => {\n    if (mostReportedData === \"\") return;\n    const firstArray = [];\n    const secondArray = [];\n\n    Object.keys(mostReportedData).map((el) => firstArray.push(el));\n    Object.values(mostReportedData).map((el) => secondArray.push(el));\n\n    setMostReportedDataArray(secondArray);\n    setMostReportedThreatArray(firstArray);\n  }, [mostReportedData]);\n\n  const getThreatLocations = (type) => {\n    apiInstance\n      .get(\"/posts/threat-locations\", {\n        params: {\n          type,\n        },\n      })\n      .then((resp) => {\n        const {\n          data: { data },\n        } = resp;\n        setData(data);\n      })\n      .catch((err) => {\n        console.log(err.response.data.error);\n      });\n  };\n\n  const getHighestAndLowestComments = () => {\n    apiInstance\n      .get(\"/posts/comments\")\n      .then((resp) => {\n        const { data } = resp;\n        setHighestComment(data.mostCommentedPost);\n        setLowestComment(data.minCommentedPost);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getMostReported = () => {\n    apiInstance\n      .get(\"/feedbacks/interactions\")\n      .then((resp) => {\n        const { data } = resp;\n        setMostReportedData(data.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data.error);\n      });\n  };\n\n  const getHighestAndLowestLikes = () => {\n    apiInstance\n      .get(\"/posts/likes\")\n      .then((resp) => {\n        const { data } = resp;\n        setHighestLikes(data?.mostLikedPost);\n        setLowestLikes(data?.minLikedPost);\n      })\n      .catch((err) => {\n        console.log(err.response.data.error);\n      });\n  };\n\n  return (\n    <DashboardLayout admin>\n      <div className=\"interactions__container\">\n        <h1 className=\"interactions__header\">User Interactions</h1>\n\n        <div className=\"interactions__div\">\n          <div className=\"interactions__header\">\n            Highest Threat Location\n            <div\n              className=\"interactions__dropdown\"\n              onClick={() => setShowDropdown((prev) => !prev)}\n            >\n              <span>{type} </span>\n              <span\n                className={`interactions__arrow ${showDropdown && \"active\"}`}\n              >\n                <ArrowDownIcon />\n              </span>\n              <div\n                className={`interactions__items ${showDropdown && \"active\"}`}\n              >\n                <div\n                  className=\"interactions__Item\"\n                  onClick={() => setType(\"rape\")}\n                >\n                  Rape\n                </div>\n                <div\n                  className=\"interactions__Item\"\n                  onClick={() => setType(\"robbery\")}\n                >\n                  Robbery\n                </div>\n                <div\n                  className=\"interactions__Item\"\n                  onClick={() => setType(\"corruption\")}\n                >\n                  Corruption\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"interactions__body\">\n            <ChartCanva dataArray={dataArray} keyArray={threatArray} />\n          </div>\n        </div>\n        <div className=\"interactions__div\">\n          <div className=\"interactions__header\">Highest Comment</div>\n          <div className=\"interactions__body\">\n            <ReportCard data={highestComment} min />\n          </div>\n        </div>\n        <div className=\"interactions__div\">\n          <div className=\"interactions__header\">Lowest Comment</div>\n          <div className=\"interactions__body\">\n            <ReportCard data={lowestComment} />\n          </div>\n        </div>\n        <div className=\"interactions__div\">\n          <div className=\"interactions__header\">Most Reported Cases</div>\n          <div className=\"interactions__body\">\n            {\" \"}\n            <ChartCanva\n              dataArray={mostReportedDataArray}\n              keyArray={mostReportedThreatArray}\n            />\n          </div>\n        </div>\n        <div className=\"interactions__div\">\n          <div className=\"interactions__header\">Highest Likes</div>\n          <div className=\"interactions__body\">\n            <ReportCard data={highestLikes} />\n          </div>\n        </div>\n        <div className=\"interactions__div\">\n          <div className=\"interactions__header\">Lowest Likes</div>\n          <div className=\"interactions__body\">\n            <ReportCard data={lowestLikes} />\n          </div>\n        </div>\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default Interactions;\n","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/chart/Chart.js",["92","93","94","95"],"import {} from \"chart.js\";\n\nimport {\n  ArcElement,\n  CategoryScale,\n  Chart,\n  Chart as ChartJS,\n  Filler,\n  Legend,\n  LineElement,\n  LinearScale,\n  PointElement,\n  TimeScale,\n  Tooltip,\n} from \"chart.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  TimeScale,\n  ArcElement,\n  Filler,\n  Tooltip,\n  Legend\n);\n\nconst ChartCanva = ({ dataArray, keyArray }) => {\n  return (\n    <Doughnut\n      data={{\n        labels: keyArray,\n        datasets: [\n          {\n            fill: true,\n            label: \"# of votes\",\n            data: dataArray,\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n            ],\n            borderWidth: 1,\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n            ],\n          },\n        ],\n      }}\n      // height=\"100%\"\n      // width={600}\n      options={{\n        responsive: true,\n        maintainAspectRatio: false,\n        // scales: {\n        //   x: {\n        //     type: \"time\",\n        //     time: {\n        //       unit: \"month\",\n        //     },\n        //   },\n        //   y: {\n        //     beginAtZero: true,\n        //     grid: {\n        //       display: false,\n        //     },\n        //     ticks: {\n        //       // stepSize: 50000004517,\n        //       // beginAtZero: true,\n        //       // Include a dollar sign in the ticks\n        //       callback: function (value, index, values) {\n        //         return \"$\" + value;\n        //       },\n        //       gridLines: {\n        //         display: false,\n        //       },\n        //     },\n        //   },\n        // },\n        // plugins: {\n        //   legend: {\n        //     display: false,\n        //     // labels: {\n        //     //   fontSize: 25,\n        //     // },\n        //   },\n        // },\n      }}\n    />\n  );\n};\n\nexport default ChartCanva;\n","/Users/refurbtechnologies/Documents/GitHub/anon-report/src/assests/ArrowDownIcon.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":28,"column":6,"nodeType":"102","endLine":28,"endColumn":12,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":25,"column":10,"nodeType":"106","messageId":"107","endLine":25,"endColumn":12},{"ruleId":"100","severity":1,"message":"108","line":62,"column":6,"nodeType":"102","endLine":62,"endColumn":10,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":13,"column":9,"nodeType":"106","messageId":"107","endLine":13,"endColumn":14},{"ruleId":"104","severity":1,"message":"111","line":6,"column":3,"nodeType":"106","messageId":"107","endLine":6,"endColumn":8},{"ruleId":"104","severity":1,"message":"112","line":16,"column":28,"nodeType":"106","messageId":"107","endLine":16,"endColumn":34},{"ruleId":"100","severity":1,"message":"113","line":39,"column":6,"nodeType":"102","endLine":39,"endColumn":12,"suggestions":"114"},{"ruleId":"100","severity":1,"message":"115","line":44,"column":6,"nodeType":"102","endLine":44,"endColumn":12,"suggestions":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'min'. Either include it or remove the dependency array.","ArrayExpression",["119"],"no-unused-vars","'by' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'nextFunc'. Either include it or remove the dependency array. If 'nextFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["120"],"'token' is assigned a value but never used.","'Chart' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'dataArray'. Either include it or remove the dependency array. If 'setData' needs the current value of 'dataArray', you can also switch to useReducer instead of useState and read 'dataArray' in the reducer.",["121"],"React Hook useEffect has a missing dependency: 'keyArray'. Either include it or remove the dependency array. If 'setKeys' needs the current value of 'keyArray', you can also switch to useReducer instead of useState and read 'keyArray' in the reducer.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [data, min]",{"range":"131","text":"132"},"Update the dependencies array to be: [id, nextFunc]",{"range":"133","text":"134"},"Update the dependencies array to be: [data, dataArray]",{"range":"135","text":"136"},"Update the dependencies array to be: [keyArray, keys]",{"range":"137","text":"138"},[1045,1051],"[data, min]",[1704,1708],"[id, nextFunc]",[666,672],"[data, dataArray]",[759,765],"[keyArray, keys]"]