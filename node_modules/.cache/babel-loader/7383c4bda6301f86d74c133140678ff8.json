{"ast":null,"code":"var _jsxFileName = \"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/postCard/postCard.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { apiInstance } from \"../../utils/utils\";\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\"; // const FILE_SIZE = 160 * 1024;\n// const SUPPORTED_FORMATS = [\n//   \"image/jpg\",\n//   \"image/jpeg\",\n//   \"image/gif\",\n//   \"image/png\",\n//   \"video/mp4\",\n//   \"audio/mp3\",\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = () => {\n  _s();\n\n  const [title, setTitle] = useState([]);\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState();\n  const [location, setLocation] = useState();\n  const [happening, setHappening] = useState();\n  const [by, setBy] = useState();\n  const [id, setId] = useState(\"\"); // let time = new Date().toLocaleTimeString();\n  // const [displayTime, setDisplayTime] = useState(time);\n  // const updateTime = () => {\n  //   time = new Date().toLocaleTimeString();\n  //   setDisplayTime(time);\n  // };\n  // setInterval(updateTime, 1000);\n\n  useEffect(() => {\n    if (id === \"\") return;\n    apiInstance.post(`/posts/verify/${id}`, {\n      input: location,\n      input1: happening,\n      input2: by\n    }).then(resp => {}).catch(err => {\n      console.log(err.response.data.error);\n    });\n  }, [id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"post\", title);\n    data.append(\"media\", file);\n    data.append(\"description\", description);\n\n    async function uploadData() {\n      apiInstance.post(`/posts`, data).then(resp => {\n        alert(resp.data.message);\n        setId(resp.data.data.id);\n      }).catch(err => {\n        alert(err.response.data.error);\n      });\n    }\n\n    uploadData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"post__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Report A Case\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__profile\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__image\",\n              children: \"A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"post__textarea Top\",\n                name: \"reportTitle\",\n                onChange: event => {\n                  const {\n                    value\n                  } = event.target;\n                  setTitle(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"post__textarea Bottom\",\n                name: \"reportDescription\",\n                onChange: event => {\n                  const {\n                    value\n                  } = event.target;\n                  setDescription(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Loction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"post__textarea Top\",\n                name: \"reportDescription\",\n                onChange: event => {\n                  const {\n                    value\n                  } = event.target;\n                  setLocation(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Is it happening right now ?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"post__textarea Top\",\n                name: \"reportDescription\",\n                onChange: event => {\n                  const {\n                    value\n                  } = event.target;\n                  setHappening(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Did you record the video or take the picture ?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"post__textarea Top\",\n                name: \"reportDescription\",\n                onChange: event => {\n                  const {\n                    value\n                  } = event.target;\n                  setBy(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Post Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__img\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file\",\n              onChange: event => {\n                const file = event.target.files[0];\n                setFile(file);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostCard, \"ruL2MBIou0O8k9aoyS1aV5MTXbw=\");\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/postCard/postCard.js"],"names":["React","useEffect","useState","FontAwesomeIcon","apiInstance","faImage","PostCard","title","setTitle","file","setFile","description","setDescription","location","setLocation","happening","setHappening","by","setBy","id","setId","post","input","input1","input2","then","resp","catch","err","console","log","response","data","error","onSubmit","e","preventDefault","FormData","append","uploadData","alert","message","event","value","target","files"],"mappings":"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","sourcesContent":["import \"./style.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { apiInstance } from \"../../utils/utils\";\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\n\n// const FILE_SIZE = 160 * 1024;\n// const SUPPORTED_FORMATS = [\n//   \"image/jpg\",\n//   \"image/jpeg\",\n//   \"image/gif\",\n//   \"image/png\",\n//   \"video/mp4\",\n//   \"audio/mp3\",\n// ];\n\nconst PostCard = () => {\n  const [title, setTitle] = useState([]);\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState();\n  const [location, setLocation] = useState();\n  const [happening, setHappening] = useState();\n  const [by, setBy] = useState();\n  const [id, setId] = useState(\"\");\n  // let time = new Date().toLocaleTimeString();\n  // const [displayTime, setDisplayTime] = useState(time);\n\n  // const updateTime = () => {\n  //   time = new Date().toLocaleTimeString();\n  //   setDisplayTime(time);\n  // };\n\n  // setInterval(updateTime, 1000);\n\n  useEffect(() => {\n    if (id === \"\") return;\n    apiInstance\n      .post(`/posts/verify/${id}`, {\n        input: location,\n        input1: happening,\n        input2: by,\n      })\n      .then((resp) => {})\n      .catch((err) => {\n        console.log(err.response.data.error);\n      });\n  }, [id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"post\", title);\n    data.append(\"media\", file);\n    data.append(\"description\", description);\n\n    async function uploadData() {\n      apiInstance\n        .post(`/posts`, data)\n        .then((resp) => {\n          alert(resp.data.message);\n          setId(resp.data.data.id);\n        })\n        .catch((err) => {\n          alert(err.response.data.error);\n        });\n    }\n    uploadData();\n  };\n  return (\n    <>\n      <div className=\"post__card\">\n        <form onSubmit={onSubmit} className=\"post__form\">\n          <div className=\"post__header\">\n            <span>Report A Case</span>\n            {/* <span className=\"post__date\">{displayTime}</span> */}\n          </div>\n          <div className=\"post__details\">\n            <div className=\"post__profile\">\n              <div className=\"post__image\">A</div>\n            </div>\n            <div className=\"post__inputs\">\n              <div>\n                <span>Title</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportTitle\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setTitle(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Description</span>\n                <textarea\n                  className=\"post__textarea Bottom\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setDescription(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Loction</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setLocation(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Is it happening right now ?</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setHappening(value);\n                  }}\n                ></textarea>\n              </div>\n              <div>\n                <span>Did you record the video or take the picture ?</span>\n                <textarea\n                  className=\"post__textarea Top\"\n                  name=\"reportDescription\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n                    setBy(value);\n                  }}\n                ></textarea>\n              </div>\n            </div>\n          </div>\n          <div className=\"post__bottom\">\n            <div className=\"post__button\">\n              <button type=\"submit\">Post Report</button>\n            </div>\n\n            <div className=\"post__img\">\n              <FontAwesomeIcon icon={faImage} />\n              <input\n                type=\"file\"\n                id=\"file\"\n                onChange={(event) => {\n                  const file = event.target.files[0];\n                  setFile(file);\n                }}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}