{"ast":null,"code":"var _jsxFileName = \"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/nonverified.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/timeline.css\";\nimport React, { useEffect, useState } from \"react\";\nimport DashboardLayout from \"../components/dashboardLayout\";\nimport ReportCard from \"../components/reportCard/reportCard\";\nimport { apiInstance } from \"../utils/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Nonverified = () => {\n  _s();\n\n  const token = useSelector(state => state.token);\n  const navigation = useNavigate();\n  const admin = useSelector(state => state.admin);\n  const [posts, setPosts] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  useEffect(() => {\n    getContent();\n    getFeedback();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (admin) return;\n    navigation(\"/\");\n  }, [admin]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getContent = () => {\n    apiInstance.get(\"/posts/nonverified\").then(resp => {\n      const {\n        data: {\n          data\n        }\n      } = resp;\n      setPosts(data);\n    }).catch(err => {\n      console.log(err.response.data.error);\n    });\n  };\n\n  const getFeedback = () => {\n    apiInstance.get(\"/posts/feedbacks\", {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    }).then(resp => {\n      const {\n        data: {\n          data\n        }\n      } = resp;\n      setFeedback(data);\n    }).catch(err => {\n      console.log(err.response.data.error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      admin: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline__body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline__reports\",\n          children: posts && posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline__none\",\n            children: \"There are no posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this) : posts === null || posts === void 0 ? void 0 : posts.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ReportCard, {\n                data: data,\n                ai: feedback.find(el => el.postId === data.id),\n                admin: true,\n                success: resp => {\n                  alert(resp);\n                  getContent();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Nonverified, \"x8YJT6r9iIXOdoTAg+r40A8PlS4=\", false, function () {\n  return [useSelector, useNavigate, useSelector];\n});\n\n_c = Nonverified;\nexport default Nonverified;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nonverified\");","map":{"version":3,"sources":["/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/nonverified.js"],"names":["React","useEffect","useState","DashboardLayout","ReportCard","apiInstance","useNavigate","useSelector","Nonverified","token","state","navigation","admin","posts","setPosts","feedback","setFeedback","getContent","getFeedback","get","then","resp","data","catch","err","console","log","response","error","headers","authorization","length","map","index","find","el","postId","id","alert"],"mappings":"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","sourcesContent":["import \"../styles/timeline.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport DashboardLayout from \"../components/dashboardLayout\";\nimport ReportCard from \"../components/reportCard/reportCard\";\nimport { apiInstance } from \"../utils/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst Nonverified = () => {\n  const token = useSelector((state) => state.token);\n  const navigation = useNavigate();\n  const admin = useSelector((state) => state.admin);\n\n  const [posts, setPosts] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n\n  useEffect(() => {\n    getContent();\n    getFeedback();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (admin) return;\n    navigation(\"/\");\n  }, [admin]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getContent = () => {\n    apiInstance\n      .get(\"/posts/nonverified\")\n      .then((resp) => {\n        const {\n          data: { data },\n        } = resp;\n        setPosts(data);\n      })\n      .catch((err) => {\n        console.log(err.response.data.error);\n      });\n  };\n  const getFeedback = () => {\n    apiInstance\n      .get(\"/posts/feedbacks\", {\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      })\n      .then((resp) => {\n        const {\n          data: { data },\n        } = resp;\n\n        setFeedback(data);\n      })\n      .catch((err) => {\n        console.log(err.response.data.error);\n      });\n  };\n  return (\n    <>\n      <DashboardLayout admin>\n        <div className=\"timeline__body\">\n          <div className=\"timeline__reports\">\n            {posts && posts.length === 0 ? (\n              <div className=\"timeline__none\">There are no posts</div>\n            ) : (\n              posts?.map((data, index) => {\n                return (\n                  <div key={index}>\n                    <ReportCard\n                      data={data}\n                      ai={feedback.find((el) => el.postId === data.id)}\n                      admin={true}\n                      success={(resp) => {\n                        alert(resp);\n                        getContent();\n                      }}\n                    />\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n      </DashboardLayout>\n    </>\n  );\n};\n\nexport default Nonverified;\n"]},"metadata":{},"sourceType":"module"}