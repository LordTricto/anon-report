{"ast":null,"code":"var _jsxFileName = \"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/chart/Chart.js\";\n// import \"chartjs-adapter-date-fns\";\n// import {\n//   CategoryScale,\n//   Chart as ChartJS,\n//   Filler,\n//   Legend,\n//   LineElement,\n//   LinearScale,\n//   PointElement,\n//   TimeScale,\n//   Tooltip,\n// } from \"chart.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\"; // ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   TimeScale,\n//   Filler,\n//   Tooltip,\n//   Legend\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartCanva = ({\n  dateArray,\n  dataArray\n}) => {\n  // const chartRef = useRef(null);\n  // const [gradientMix, setGradientMix] = useState(\"\");\n  // useEffect(() => {\n  //   const chart = chartRef.current;\n  //   if (!chart) {\n  //     return;\n  //   }\n  //   createGradient(chart.ctx, chart.chartArea);\n  // }, []);\n  // function createGradient(ctx, area) {\n  //   const gradient = ctx.createLinearGradient(0, area.bottom, 0, area.top);\n  //   gradient.addColorStop(1, \"rgba(84, 102, 249, 1)\");\n  //   gradient.addColorStop(0.2, \"rgba(84, 102, 249, 0.05)\");\n  //   gradient.addColorStop(0, \"rgba(84, 102, 249, 0)\");\n  //   return setGradientMix(gradient);\n  // }\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: [\"one\", \"two\", \"three\", \"four\"],\n      datasets: [{\n        fill: true,\n        label: \"# of votes\",\n        data: [12, 4, 6, 4],\n        borderColor: [\"rgb(84,102,249)\"],\n        borderWidth: 1,\n        backgroundColor: [\"green\", \"blue\", \"red\", \"black\"] // pointBackgroundColor: \"white\",\n\n      }]\n    } // height=\"100%\"\n    // width={600}\n    ,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false // scales: {\n      //   x: {\n      //     type: \"time\",\n      //     time: {\n      //       unit: \"month\",\n      //     },\n      //   },\n      //   y: {\n      //     beginAtZero: true,\n      //     grid: {\n      //       display: false,\n      //     },\n      //     ticks: {\n      //       // stepSize: 50000004517,\n      //       // beginAtZero: true,\n      //       // Include a dollar sign in the ticks\n      //       callback: function (value, index, values) {\n      //         return \"$\" + value;\n      //       },\n      //       gridLines: {\n      //         display: false,\n      //       },\n      //     },\n      //   },\n      // },\n      // plugins: {\n      //   legend: {\n      //     display: false,\n      //     // labels: {\n      //     //   fontSize: 25,\n      //     // },\n      //   },\n      // },\n\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChartCanva;\nexport default ChartCanva;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartCanva\");","map":{"version":3,"sources":["/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/chart/Chart.js"],"names":["React","useEffect","useRef","useState","Bar","ChartCanva","dateArray","dataArray","labels","datasets","fill","label","data","borderColor","borderWidth","backgroundColor","responsive","maintainAspectRatio"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,SAASC,GAAT,QAAoB,iBAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC/C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE,QAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,MAAxB,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAE,IADR;AAEEC,QAAAA,KAAK,EAAE,YAFT;AAGEC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,CAHR;AAIEC,QAAAA,WAAW,EAAE,CAAC,iBAAD,CAJf;AAKEC,QAAAA,WAAW,EAAE,CALf;AAMEC,QAAAA,eAAe,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,EAAyB,OAAzB,CANnB,CAOE;;AAPF,OADQ;AAFN,KADR,CAeE;AACA;AAhBF;AAiBE,IAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,mBAAmB,EAAE,KAFd,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnCO;AAjBX;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CA5ED;;KAAMZ,U;AA8EN,eAAeA,UAAf","sourcesContent":["// import \"chartjs-adapter-date-fns\";\n\n// import {\n//   CategoryScale,\n//   Chart as ChartJS,\n//   Filler,\n//   Legend,\n//   LineElement,\n//   LinearScale,\n//   PointElement,\n//   TimeScale,\n//   Tooltip,\n// } from \"chart.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Bar } from \"react-chartjs-2\";\n\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   TimeScale,\n//   Filler,\n//   Tooltip,\n//   Legend\n// );\n\nconst ChartCanva = ({ dateArray, dataArray }) => {\n  // const chartRef = useRef(null);\n  // const [gradientMix, setGradientMix] = useState(\"\");\n\n  // useEffect(() => {\n  //   const chart = chartRef.current;\n  //   if (!chart) {\n  //     return;\n  //   }\n  //   createGradient(chart.ctx, chart.chartArea);\n  // }, []);\n\n  // function createGradient(ctx, area) {\n  //   const gradient = ctx.createLinearGradient(0, area.bottom, 0, area.top);\n  //   gradient.addColorStop(1, \"rgba(84, 102, 249, 1)\");\n  //   gradient.addColorStop(0.2, \"rgba(84, 102, 249, 0.05)\");\n  //   gradient.addColorStop(0, \"rgba(84, 102, 249, 0)\");\n  //   return setGradientMix(gradient);\n  // }\n  return (\n    <Bar\n      data={{\n        labels: [\"one\", \"two\", \"three\", \"four\"],\n        datasets: [\n          {\n            fill: true,\n            label: \"# of votes\",\n            data: [12, 4, 6, 4],\n            borderColor: [\"rgb(84,102,249)\"],\n            borderWidth: 1,\n            backgroundColor: [\"green\", \"blue\", \"red\", \"black\"],\n            // pointBackgroundColor: \"white\",\n          },\n        ],\n      }}\n      // height=\"100%\"\n      // width={600}\n      options={{\n        responsive: true,\n        maintainAspectRatio: false,\n        // scales: {\n        //   x: {\n        //     type: \"time\",\n        //     time: {\n        //       unit: \"month\",\n        //     },\n        //   },\n        //   y: {\n        //     beginAtZero: true,\n        //     grid: {\n        //       display: false,\n        //     },\n        //     ticks: {\n        //       // stepSize: 50000004517,\n        //       // beginAtZero: true,\n        //       // Include a dollar sign in the ticks\n        //       callback: function (value, index, values) {\n        //         return \"$\" + value;\n        //       },\n        //       gridLines: {\n        //         display: false,\n        //       },\n        //     },\n        //   },\n        // },\n        // plugins: {\n        //   legend: {\n        //     display: false,\n        //     // labels: {\n        //     //   fontSize: 25,\n        //     // },\n        //   },\n        // },\n      }}\n    />\n  );\n};\n\nexport default ChartCanva;\n"]},"metadata":{},"sourceType":"module"}