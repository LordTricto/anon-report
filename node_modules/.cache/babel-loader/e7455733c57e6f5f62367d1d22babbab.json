{"ast":null,"code":"var _jsxFileName = \"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/login.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/login.css\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport Input from \"../components/Input/input\";\nimport YupPassword from \"yup-password\";\nimport { apiInstance } from \"../utils/utils\";\nimport { setAdmin } from \"../redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nYupPassword(Yup); // password: Yup.string()\n//     .password()\n//     // .minLowercase(8) // raise the lowercase requirement to 8\n//     // .min(0) // disable minimum characters completely\n//     .required(\"Required\"), // add an additional rule\n\nconst INITIAL_FORM_STATE = {\n  email: \"\",\n  password: \"\"\n};\nconst FORM_VALIDATION = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string().required(\"Required\") // add an additional rule\n\n});\n\nconst Login = () => {\n  _s();\n\n  let navigation = useNavigate();\n  const dispatch = useDispatch();\n  const [login, setLogin] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    if (login) {\n      dispatch(setAdmin(token));\n      navigation(\"/adminTimeline\");\n    }\n  }, [login]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login__head\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__container\",\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: { ...INITIAL_FORM_STATE\n              },\n              validationSchema: FORM_VALIDATION,\n              onSubmit: info => {\n                apiInstance.post(\"/users/signin\", {\n                  email: info.email,\n                  password: info.password\n                }).then(resp => {\n                  setToken(resp.data.data);\n                  setLogin(true);\n                }).catch(err => {\n                  setErrorMessage(err.response.data.error);\n                });\n              },\n              enableReinitialize: true,\n              children: formik => /*#__PURE__*/_jsxDEV(Form, {\n                className: \"login__form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"login__inputs\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"email\",\n                    placeholder: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"password\",\n                    name: \"password\",\n                    placeholder: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"login__error\",\n                  children: errorMessage && errorMessage.length > 0 ? errorMessage : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"login__button\",\n                  type: \"sumbit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"cnabW4d8WHVYif7ixc9AIPRdTlk=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/login.js"],"names":["Yup","Form","Formik","React","useEffect","useState","Input","YupPassword","apiInstance","setAdmin","useDispatch","useNavigate","INITIAL_FORM_STATE","email","password","FORM_VALIDATION","object","shape","string","required","Login","navigation","dispatch","login","setLogin","token","setToken","errorMessage","setErrorMessage","info","post","then","resp","data","catch","err","response","error","formik","length"],"mappings":"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","sourcesContent":["import \"../styles/login.css\";\n\nimport * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Input from \"../components/Input/input\";\nimport YupPassword from \"yup-password\";\nimport { apiInstance } from \"../utils/utils\";\nimport { setAdmin } from \"../redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nYupPassword(Yup);\n\n// password: Yup.string()\n//     .password()\n//     // .minLowercase(8) // raise the lowercase requirement to 8\n//     // .min(0) // disable minimum characters completely\n//     .required(\"Required\"), // add an additional rule\n\nconst INITIAL_FORM_STATE = {\n  email: \"\",\n  password: \"\",\n};\n\nconst FORM_VALIDATION = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string().required(\"Required\"), // add an additional rule\n});\nconst Login = () => {\n  let navigation = useNavigate();\n  const dispatch = useDispatch();\n  const [login, setLogin] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    if (login) {\n      dispatch(setAdmin(token));\n      navigation(\"/adminTimeline\");\n    }\n  }, [login]); // eslint-disable-line react-hooks/exhaustive-deps\n  return (\n    <div className=\"container\">\n      <div className=\"main\">\n        <div className=\"login__card\">\n          <h1 className=\"login__head\">Login</h1>\n          <div className=\"login__body\">\n            <div className=\"login__container\">\n              <Formik\n                initialValues={{\n                  ...INITIAL_FORM_STATE,\n                }}\n                validationSchema={FORM_VALIDATION}\n                onSubmit={(info) => {\n                  apiInstance\n                    .post(\"/users/signin\", {\n                      email: info.email,\n                      password: info.password,\n                    })\n                    .then((resp) => {\n                      setToken(resp.data.data);\n                      setLogin(true);\n                    })\n                    .catch((err) => {\n                      setErrorMessage(err.response.data.error);\n                    });\n                }}\n                enableReinitialize\n              >\n                {(formik) => (\n                  <Form className=\"login__form\">\n                    <div className=\"login__inputs\">\n                      <Input type=\"text\" name=\"email\" placeholder=\"email\" />\n                      <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"password\"\n                      />\n                    </div>\n                    <div className=\"login__error\">\n                      {errorMessage && errorMessage.length > 0\n                        ? errorMessage\n                        : null}\n                    </div>\n                    <button className=\"login__button\" type=\"sumbit\">\n                      Login\n                    </button>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}