{"ast":null,"code":"var _jsxFileName = \"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/adminTimeline.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/timeline.css\";\nimport React, { useEffect, useState } from \"react\";\nimport DashboardLayout from \"../components/dashboardLayout\";\nimport ReportCard from \"../components/reportCard/reportCard\";\nimport { apiInstance } from \"../utils/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminTimeline = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const navigation = useNavigate();\n  const admin = useSelector(state => state.admin);\n  useEffect(() => {\n    getContent();\n  }, []);\n  useEffect(() => {\n    if (admin) return;\n    navigation(\"/\");\n  }, [admin]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getContent = () => {\n    apiInstance.get(\"/posts\").then(resp => {\n      const {\n        data: {\n          data\n        }\n      } = resp;\n      setPosts();\n      setPosts(data);\n    }).catch(err => {\n      console.log(err.response.data.error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      admin: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline__body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline__reports\",\n          children: posts && posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline__none\",\n            children: \"There are no posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this) : posts === null || posts === void 0 ? void 0 : posts.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ReportCard, {\n                data: data,\n                admin: true,\n                success: resp => {\n                  alert(resp);\n                  getContent();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminTimeline, \"4bfJrXubSztAIMDJ3Hvc4tX/ZJI=\", false, function () {\n  return [useNavigate, useSelector];\n});\n\n_c = AdminTimeline;\nexport default AdminTimeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminTimeline\");","map":{"version":3,"sources":["/Users/refurbtechnologies/Documents/GitHub/anon-report/src/pages/adminTimeline.js"],"names":["React","useEffect","useState","DashboardLayout","ReportCard","apiInstance","useNavigate","useSelector","AdminTimeline","posts","setPosts","navigation","admin","state","getContent","get","then","resp","data","catch","err","console","log","response","error","length","map","index","alert"],"mappings":";;;AAAA,OAAO,wBAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,UAAU,GAAGL,WAAW,EAA9B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAJ,EAAW;AACXD,IAAAA,UAAU,CAAC,GAAD,CAAV;AACD,GAHQ,EAGN,CAACC,KAAD,CAHM,CAAT,CAT0B,CAYb;;AAEb,QAAME,UAAU,GAAG,MAAM;AACvBT,IAAAA,WAAW,CACRU,GADH,CACO,QADP,EAEGC,IAFH,CAESC,IAAD,IAAU;AACd,YAAM;AACJC,QAAAA,IAAI,EAAE;AAAEA,UAAAA;AAAF;AADF,UAEFD,IAFJ;AAGAP,MAAAA,QAAQ;AACRA,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,KARH,EASGC,KATH,CASUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaL,IAAb,CAAkBM,KAA9B;AACD,KAXH;AAYD,GAbD;;AAeA,sBACE;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,KAAK,MAAtB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBACGf,KAAK,IAAIA,KAAK,CAACgB,MAAN,KAAiB,CAA1B,gBACC;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGChB,KAHD,aAGCA,KAHD,uBAGCA,KAAK,CAAEiB,GAAP,CAAW,CAACR,IAAD,EAAOS,KAAP,KAAiB;AAC1B,gCACE;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAET,IADR;AAEE,gBAAA,KAAK,EAAE,IAFT;AAGE,gBAAA,OAAO,EAAGD,IAAD,IAAU;AACjBW,kBAAAA,KAAK,CAACX,IAAD,CAAL;AACAH,kBAAAA,UAAU;AACX;AANH;AAAA;AAAA;AAAA;AAAA;AADF,eAAUa,KAAV;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAbD;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA6BD,CA1DD;;GAAMnB,a;UAEeF,W,EACLC,W;;;KAHVC,a;AA4DN,eAAeA,aAAf","sourcesContent":["import \"../styles/timeline.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport DashboardLayout from \"../components/dashboardLayout\";\nimport ReportCard from \"../components/reportCard/reportCard\";\nimport { apiInstance } from \"../utils/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst AdminTimeline = () => {\n  const [posts, setPosts] = useState([]);\n  const navigation = useNavigate();\n  const admin = useSelector((state) => state.admin);\n\n  useEffect(() => {\n    getContent();\n  }, []);\n\n  useEffect(() => {\n    if (admin) return;\n    navigation(\"/\");\n  }, [admin]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getContent = () => {\n    apiInstance\n      .get(\"/posts\")\n      .then((resp) => {\n        const {\n          data: { data },\n        } = resp;\n        setPosts();\n        setPosts(data);\n      })\n      .catch((err) => {\n        console.log(err.response.data.error);\n      });\n  };\n\n  return (\n    <>\n      <DashboardLayout admin>\n        <div className=\"timeline__body\">\n          <div className=\"timeline__reports\">\n            {posts && posts.length === 0 ? (\n              <div className=\"timeline__none\">There are no posts</div>\n            ) : (\n              posts?.map((data, index) => {\n                return (\n                  <div key={index}>\n                    <ReportCard\n                      data={data}\n                      admin={true}\n                      success={(resp) => {\n                        alert(resp);\n                        getContent();\n                      }}\n                    />\n                  </div>\n                );\n              })\n            )}\n            {/* <ReportCard /> */}\n          </div>\n        </div>\n      </DashboardLayout>\n    </>\n  );\n};\n\nexport default AdminTimeline;\n"]},"metadata":{},"sourceType":"module"}