{"ast":null,"code":"var _jsxFileName = \"/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/chart/Chart.js\",\n    _s = $RefreshSig$();\n\nimport \"chartjs-adapter-date-fns\";\nimport { CategoryScale, Chart as ChartJS, Filler, Legend, LineElement, LinearScale, PointElement, TimeScale, Tooltip } from \"chart.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, TimeScale, Filler, Tooltip, Legend);\n\nconst ChartCanva = ({\n  dateArray,\n  dataArray\n}) => {\n  _s();\n\n  const chartRef = useRef(null);\n  const [gradientMix, setGradientMix] = useState(\"\");\n  useEffect(() => {\n    const chart = chartRef.current;\n\n    if (!chart) {\n      return;\n    }\n\n    createGradient(chart.ctx, chart.chartArea);\n  }, []);\n\n  function createGradient(ctx, area) {\n    const gradient = ctx.createLinearGradient(0, area.bottom, 0, area.top);\n    gradient.addColorStop(1, \"rgba(84, 102, 249, 1)\");\n    gradient.addColorStop(0.2, \"rgba(84, 102, 249, 0.05)\");\n    gradient.addColorStop(0, \"rgba(84, 102, 249, 0)\");\n    return setGradientMix(gradient);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Line, {\n    ref: chartRef,\n    data: {\n      labels: dateArray,\n      datasets: [{\n        fill: true,\n        label: \"# of votes\",\n        data: dataArray,\n        borderColor: [\" rgb(84,102,249)\"],\n        borderWidth: 1,\n        backgroundColor: gradientMix,\n        pointBackgroundColor: \"white\"\n      }]\n    } // height=\"100%\"\n    // width={600}\n    ,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          type: \"time\",\n          time: {\n            unit: \"month\"\n          }\n        },\n        y: {\n          beginAtZero: true,\n          grid: {\n            display: false\n          },\n          ticks: {\n            // stepSize: 50000004517,\n            // beginAtZero: true,\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return \"$\" + value;\n            },\n            gridLines: {\n              display: false\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false // labels: {\n          //   fontSize: 25,\n          // },\n\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChartCanva, \"IUu3ca9yftjk7W0yFpgrTVXWaXE=\");\n\n_c = ChartCanva;\nexport default ChartCanva;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartCanva\");","map":{"version":3,"sources":["/Users/refurbtechnologies/Documents/GitHub/anon-report/src/components/chart/Chart.js"],"names":["CategoryScale","Chart","ChartJS","Filler","Legend","LineElement","LinearScale","PointElement","TimeScale","Tooltip","React","useEffect","useRef","useState","Line","register","ChartCanva","dateArray","dataArray","chartRef","gradientMix","setGradientMix","chart","current","createGradient","ctx","chartArea","area","gradient","createLinearGradient","bottom","top","addColorStop","labels","datasets","fill","label","data","borderColor","borderWidth","backgroundColor","pointBackgroundColor","responsive","maintainAspectRatio","scales","x","type","time","unit","y","beginAtZero","grid","display","ticks","callback","value","index","values","gridLines","plugins","legend"],"mappings":"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","sourcesContent":["import \"chartjs-adapter-date-fns\";\n\nimport {\n  CategoryScale,\n  Chart as ChartJS,\n  Filler,\n  Legend,\n  LineElement,\n  LinearScale,\n  PointElement,\n  TimeScale,\n  Tooltip,\n} from \"chart.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  TimeScale,\n  Filler,\n  Tooltip,\n  Legend\n);\n\nconst ChartCanva = ({ dateArray, dataArray }) => {\n  const chartRef = useRef(null);\n  const [gradientMix, setGradientMix] = useState(\"\");\n\n  useEffect(() => {\n    const chart = chartRef.current;\n    if (!chart) {\n      return;\n    }\n    createGradient(chart.ctx, chart.chartArea);\n  }, []);\n\n  function createGradient(ctx, area) {\n    const gradient = ctx.createLinearGradient(0, area.bottom, 0, area.top);\n    gradient.addColorStop(1, \"rgba(84, 102, 249, 1)\");\n    gradient.addColorStop(0.2, \"rgba(84, 102, 249, 0.05)\");\n    gradient.addColorStop(0, \"rgba(84, 102, 249, 0)\");\n    return setGradientMix(gradient);\n  }\n  return (\n    <Line\n      ref={chartRef}\n      data={{\n        labels: dateArray,\n        datasets: [\n          {\n            fill: true,\n            label: \"# of votes\",\n            data: dataArray,\n            borderColor: [\" rgb(84,102,249)\"],\n            borderWidth: 1,\n            backgroundColor: gradientMix,\n            pointBackgroundColor: \"white\",\n          },\n        ],\n      }}\n      // height=\"100%\"\n      // width={600}\n      options={{\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"month\",\n            },\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              display: false,\n            },\n            ticks: {\n              // stepSize: 50000004517,\n              // beginAtZero: true,\n              // Include a dollar sign in the ticks\n              callback: function (value, index, values) {\n                return \"$\" + value;\n              },\n              gridLines: {\n                display: false,\n              },\n            },\n          },\n        },\n        plugins: {\n          legend: {\n            display: false,\n            // labels: {\n            //   fontSize: 25,\n            // },\n          },\n        },\n      }}\n    />\n  );\n};\n\nexport default ChartCanva;\n"]},"metadata":{},"sourceType":"module"}